-- MySQL Script generated by MySQL Workbench
-- Fri May 19 11:14:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema reservation
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema reservation
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `reservation` DEFAULT CHARACTER SET utf8 COLLATE utf8_czech_ci ;
USE `reservation` ;

-- -----------------------------------------------------
-- Table `reservation`.`vehicle`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `reservation`.`vehicle` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `vin` VARCHAR(17) NOT NULL,
  `spz` VARCHAR(7) NOT NULL,
  `stk` DATE NOT NULL,
  `tp` VARCHAR(8) NOT NULL,
  `condition` ENUM('applicable', 'damaged', 'deposit') NOT NULL DEFAULT 'applicable',
  `num_of_seats` TINYINT UNSIGNED NOT NULL,
  `brand` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `fuel` ENUM('diesel', 'petrol', 'electric', 'hybrid', 'other') NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `vin_UNIQUE` (`vin` ASC),
  UNIQUE INDEX `spz_UNIQUE` (`spz` ASC),
  UNIQUE INDEX `tp_UNIQUE` (`tp` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reservation`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `reservation`.`employee` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `birth_number` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `birth_number_UNIQUE` (`birth_number` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reservation`.`booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `reservation`.`booking` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `vehicle_id` INT UNSIGNED NOT NULL,
  `employee_id` INT UNSIGNED NOT NULL,
  `start_of_booking` DATETIME NOT NULL,
  `end_of_booking` DATETIME NOT NULL,
  `status` ENUM('for approval', 'approved', 'rejected') NOT NULL DEFAULT 'for approval',
  `purpose` VARCHAR(255) NOT NULL,
  INDEX `fk_booking_vehicle_idx` (`vehicle_id` ASC),
  INDEX `fk_booking_employee1_idx` (`employee_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_booking_vehicle`
    FOREIGN KEY (`vehicle_id`)
    REFERENCES `reservation`.`vehicle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booking_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `reservation`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `reservation` ;

-- -----------------------------------------------------
-- procedure add_booking
-- -----------------------------------------------------

DELIMITER $$
USE `reservation`$$
CREATE PROCEDURE `add_booking`
	(
        IN vid INT UNSIGNED,
        IN eid INT UNSIGNED,
        IN startb DATETIME,
        IN endb DATETIME,
        IN purp VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_czech_ci'
    )
    BEGIN
        INSERT INTO `reservation`.`booking` (`id`, `vehicle_id`, `employee_id`, `start_of_booking`, `end_of_booking`, `status`, `purpose`)
        VALUES (NULL, vid, eid, startb, endb, 'for approval', purp);
    END$$

DELIMITER ;
USE `reservation`;

DELIMITER $$
USE `reservation`$$
CREATE DEFINER = CURRENT_USER TRIGGER `reservation`.`check_booking` BEFORE INSERT ON `booking` FOR EACH ROW
BEGIN
	SET @stk = (SELECT `stk` FROM `reservation`.`vehicle` WHERE id = NEW.`vehicle_id`);
	SET @cond = (SELECT `condition` FROM `reservation`.`vehicle` WHERE id = NEW.`vehicle_id`);
    IF @stk < now() OR @cond != 'applicable' THEN
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'The vehicle is out of service. Try booking a different one.';
    END IF;
END;$$


DELIMITER ;

INSERT INTO `reservation`.`vehicle` (`id`, `vin`, `spz`, `stk`, `tp`, `condition`, `num_of_seats`, `brand`, `type`, `fuel`) VALUES
  (NULL, '1G1ND52JX3M623371', '5U53123', '2023-08-31', 'TS152345', 'applicable', 5, 'Hyundai', 'i30 Fastback', 'petrol'),
  (NULL, '4UZAAZAL53CL74424', '1U72254', '2024-03-31', 'AK658943', 'applicable', 5, 'Toyota', 'Prius', 'hybrid'),
  (NULL, 'JH4KA8260PC000495', '2U35661', '2025-01-31', 'EW655688', 'applicable', 5, 'SSangYong', 'Korando', 'petrol'),
  (NULL, '4S3BH665627630221', '8U45322', '2023-04-30', 'EU665315', 'applicable', 5, 'Škoda', 'Karoq', 'diesel'),
  (NULL, 'JH4KA7561PC008269', '2U31562', '2023-09-30', 'TR330269', 'damaged', 5, 'VW', 'Golf', 'petrol');

INSERT INTO `reservation`.`employee` (`id` ,`firstname`, `lastname`, `birth_number`) VALUES
  (NULL, 'Jana', 'Malá', '7452191113'),
  (NULL, 'Ivan', 'Veselý', '8512121358'),
  (NULL, 'Karel', 'Zajíc', '9411192626'),
  (NULL, 'Pavel', 'Vyskočil', '9503179811'),
  (NULL, 'Tomáš', 'Tvrdý', '0006251312'),
  (NULL, 'Petr', 'Bobek', '6911311516'),
  (NULL, 'Michal', 'Vytlačil', '7711151520'),
  (NULL, 'Eva', 'Králová', '9860110908'),
  (NULL, 'Anna', 'Císařová', '0051024125'),
  (NULL, 'Klára', 'Nováková', '9558072530');

CALL add_booking(1, 1, '2023-05-19 08:00:00', '2023-05-19 15:00:00', 'školení DVPP');
CALL add_booking(2, 4, '2023-05-20 07:00:00', '2023-05-21 13:00:00', 'školení DVPP');
CALL add_booking(3, 7, '2023-05-21 08:00:00', '2023-05-22 15:00:00', 'školení DVPP');
CALL add_booking(2, 9, '2023-05-22 10:30:00', '2023-05-24 10:30:00', 'školení DVPP');